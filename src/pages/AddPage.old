import React from "react";
import { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom";

const AddPage = ({
  addNcbdSubmit,
  deleteNcbdSubmit,
  updateNcbdSubmit,
  isEdit,
}) => {
  const { id } = useParams("");
  const [ncbd, setNcbd] = useState("");
  const [issues, setIssues] = useState([]);
  const [issueTitle, setIssueTitle] = useState([]);
  const [issueNum, setIssueNum] = useState([]);
  const [issuePub, setIssuePub] = useState("[]");
  const [loading, setLoading] = useState(true);

  const navigate = useNavigate();


useEffect(() => {
    console.log('got to here')
    // Reset state when the component mounts
    setIssues(issues,[]);
  }, []); // Empty array means this effect runs once on mount


  useEffect(() => { 
    const fetchComics = async () => {
      console.log("ran fetch comics");
   
        console.log('isEdit')
      
      try {
        const res = await fetch(`http://localhost:3369/comics/${id}`);
        const data = await res.json();

        setIssues(data.issues);
        setNcbd(data.NCBD);
      } catch (error) {
        console.log("error fetching data, " + error);
      } finally {
        setLoading(false);
      } 
    };

    fetchComics();
  }, []);

  const addIssue = () => {
    let issueID = issues.length + 1;
    let newIssueObj = {
      id: issueID,
      title: issueTitle,
      number: issueNum,
      publisher: issuePub,
    };
    issues.push(newIssueObj);
    setIssueTitle("");
    setIssueNum("");
    setIssuePub("");
  };

  const removeIssue = (id) => {
    setIssues((prevIssues) => {
      const newIssues = [...prevIssues];
      newIssues.splice(id, 1);
      return newIssues;
      e;
    });
  };

  const submitNcbd = (e) => {
    const newNCBD = {
      NCBD: ncbd,
      issues,
    };
    setIssues([]);
    addNcbdSubmit(newNCBD);

    return navigate("/");
  };

  const updateNcbd = () => {
    console.log("Update");

    const updateNCBD = {
      id,
      ncbd,
      issues,
    };
    updateNcbdSubmit(updateNCBD);

    return navigate("/");
  };

  const deleteNcbd = () => {
    console.log("Delete");
    const confirm = window.confirm(
      "Are you sure you want to delete this New Comic Book Day Listing?"
    );

    if (!confirm) return;

    deleteNcbdSubmit(id);

    navigate("/allcomics");
  };

  return loading ? (
    <h2>Loding</h2>
  ) : (
    <div className="card full">
      <h3> 
        {isEdit ? `Edit List for Week: ${ncbd} ` : `Add New Comic List`}{" "}
      </h3>
      <div>
        <label htmlFor="ndcd">New Comic Book Date:</label>
        {isEdit ? (
          <b>{ncbd}</b>
        ) : (
          <select
            name="ncbd"
            id="ncbd"
            value={ncbd}
            required
            onChange={(e) => setNcbd(e.target.value)}
          >
            <option value="">-- select ---</option>
            <option value="2.5.2025">2.5.2025</option>
            <option value="2.12.2025">2.12.2025</option>
            <option value="2.19.2025">2.19.2025</option>
            <option value="2.26.2025">2.26.2025</option>
            <option value="3.5.2025">3.5.2025</option>
          </select>
        )}
      </div>
      <b>Issues:</b>
      <hr />
      {issues.length}
      {issues.length === 0 ? " issues this week" : " issues you to buy"}
      {issues.map((issue, index) => (
        <div key={index}>
          {issue.title} #{issue.number} | {issue.publisher}{" "}
          <button onClick={() => removeIssue(index)}>X {index}</button>
        </div>
      ))}
      <hr />
      <div>
        <div>
          <label htmlFor="title">Title:</label>
          <input
            type="text"
            id="title"
            onChange={(e) => setIssueTitle(e.target.value)}
            value={issueTitle}
          />
        </div>
        <div>
          <label htmlFor="number">Number</label>
          <input
            type="text"
            id="number"
            onChange={(e) => setIssueNum(e.target.value)}
            value={issueNum}
          />
        </div>

        <div>
          <label htmlFor="number">Publisher</label>
          <select
            name="publisher"
            id="publisher"
            value={issuePub}
            required
            onChange={(e) => setIssuePub(e.target.value)}
          >
            <option value="">-- select ---</option>
            <option value="DC">DC</option>
            <option value="Dynamite">Dynamite</option>
            <option value="Image">Image</option>
            <option value="Marvel">Marvel</option>
            <option value="Nacelle Press">Nacell Press</option>
          </select>
        </div>
        <div>
          <button onClick={() => addIssue()}>+</button>
        </div>
      </div>
      <hr />
      <div>
        {isEdit ? (
          <>
            <button onClick={updateNcbd}>Update</button>{" "}
            <button onClick={deleteNcbd}>Delete</button>
          </>
        ) : (
          <button onClick={submitNcbd}>Submit</button>
        )}
      </div>
    </div>
  );
};

export default AddPage;
